#!/bin/bash

clear
#-- colors --#
#R='\e[1;31m' #RED
#G='\e[1;32m' #GREEN
#B='\e[1;34m' #BLUE
#Y='\e[1;33m' #YELLOW
#C='\e[1;36m' #CYAN
W='\e[1;37m' #WHITE
##############

#-- colors v2 --#
R='\e[31;1m' #RED
G='\e[32;1m' #GREEN
Y='\e[33;1m' #YELLOW
DB='\e[34;1m' #DARKBLUE
P='\e[35;1m' #PURPLE
LB='\e[36;1m' #LIGHTBLUE

#-- colors v3 --#
BR='\e[3;31m' #RED
BG='\e[3;32m' #GREEN
BY='\e[3;33m' #YELLOW
BDB='\e[3;34m' #DARKBLUE
BP='\e[3;35m' #PURPLE
BLB='\e[3;36m' #LIGHTBLUE

echo -e "$Y"
repo_cust(){
read -p "Install Custom Repo, Anda Yakin? (y/n) : " an
if [[ $an == "y" || $an == "Y" ]]; then
echo -e "Memasang Custom Repo"
sleep 2
clear
sed -i 's/option check_signature/# option check_signature/g' /etc/opkg.conf
echo "src/gz custom_generic https://raw.githubusercontent.com/lrdrdn/my-opkg-repo/main/generic" >> /etc/opkg/customfeeds.conf
echo "src/gz custom_arch https://raw.githubusercontent.com/lrdrdn/my-opkg-repo/main/$(cat /etc/os-release | grep OPENWRT_ARCH | awk -F '"' '{print $2}')" >> /etc/opkg/customfeeds.conf
echo " " >> /etc/opkg/customfeeds.conf
sleep 2
cd /tmp && sh inpass
else
clear
echo -e "kembali ke halaman awal..."
sleep 2
cd /tmp && sh inpass
exit
fi
}
echo -e "$Y"
PLite_Mipsel_24kc_16MB(){
read -p "Install Passwall Lite, Anda Yakin? (y/n) : " an
if [[ $an == "y" || $an == "Y" ]]; then
echo -e "Mulai installasi Passwall lite"
sleep 2
clear
echo -e "Proses Installasi passwall lite"
echo "src/gz custom_minimal https://raw.githubusercontent.com/lrdrdn/my-opkg-repo/main/minimal" >> /etc/opkg/customfeeds.conf
opkg remove dnsmasq && opkg update && opkg install dnsmasq-full
opkg install ipset ipt2socks iptables iptables-legacy iptables-mod-iprange iptables-mod-socket iptables-mod-tproxy kmod-ipt-nat coreutils coreutils-base64 coreutils-nohup curl dns2socks ip-full libuci-lua lua luci-compat luci-lib-jsonc microsocks resolveip tcping unzip luci-app-passwall
wget --no-check-certificate "https://raw.githubusercontent.com/alkhanet26/plite/main/xray-core.ipk" -O /tmp/xray-core.ipk && chmod +x /tmp/xray-core.ipk && cd /tmp && opkg install *.ipk
wget --no-check-certificate "https://raw.githubusercontent.com/alkhanet26/plite/main/status.htm"  -O /usr/lib/lua/luci/view/passwall/global/status.htm && chmod +x /usr/lib/lua/luci/view/passwall/global/status.htm
wget --no-check-certificate "https://raw.githubusercontent.com/alkhanet26/plite/main/passwall.lua" -O /usr/lib/lua/luci/controller/passwall.lua && chmod +x /usr/lib/lua/luci/controller/passwall.lua
opkg install --force-reinstall dnsmasq-full
sleep 2
echo -e "Proses Selesai"
cd /tmp && sh inpass
else
clear
echo -e "kembali ke halaman awal..."
sleep 2
cd /tmp && sh inpass
exit
fi
}
echo -e "$Y"
PLite_All(){
read -p "Install Passwall Lite, Anda Yakin? (y/n) : " an
if [[ $an == "y" || $an == "Y" ]]; then
echo -e "Mulai installasi Passwall lite"
sleep 2
clear
echo -e "Proses Installasi Passwall Lite"
opkg remove dnsmasq && opkg update && opkg install dnsmasq-full
opkg install ipset ipt2socks iptables iptables-legacy iptables-mod-iprange iptables-mod-socket iptables-mod-tproxy kmod-ipt-nat coreutils coreutils-base64 coreutils-nohup curl dns2socks ip-full libuci-lua lua luci-compat luci-lib-jsonc microsocks resolveip tcping unzip luci-app-passwall xray-core trojan-go
wget --no-check-certificate "https://raw.githubusercontent.com/alkhanet26/plite/main/status.htm"  -O /usr/lib/lua/luci/view/passwall/global/status.htm && chmod +x /usr/lib/lua/luci/view/passwall/global/status.htm
wget --no-check-certificate "https://raw.githubusercontent.com/alkhanet26/plite/main/passwall.lua" -O /usr/lib/lua/luci/controller/passwall.lua && chmod +x /usr/lib/lua/luci/controller/passwall.lua
opkg install --force-reinstall dnsmasq-full
sleep 2
echo -e "Proses Selesai"
cd /tmp && sh inpass
else
clear
echo -e "kembali ke halaman awal..."
sleep 2
cd /tmp && sh inpass
exit
fi
}
echo -e "$Y"
OC(){
read -p "Install Openclash, Anda Yakin? (y/n) : " an
if [[ $an == "y" || $an == "Y" ]]; then
echo -e "Mulai installasi Openclash"
sleep 2
clear
echo -e "Proses Installasi Openclash"
opkg remove dnsmasq && opkg update && opkg install dnsmasq-full
opkg install luci-app-openclash
wget --no-check-certificate "https://raw.githubusercontent.com/alkhanet26/plite/main/developer.htm"  -O /usr/lib/lua/luci/view/openclash/developer.htm && chmod +x /usr/lib/lua/luci/view/openclash/developer.htm
wget --no-check-certificate "https://raw.githubusercontent.com/alkhanet26/plite/main/myip.htm"  -O /usr/lib/lua/luci/view/openclash/myip.htm && chmod +x /usr/lib/lua/luci/view/openclash/myip.htm
opkg install --force-reinstall dnsmasq-full
sleep 2
echo -e "Proses Selesai"
cd /tmp && sh inpass
else
clear
echo -e "kembali ke halaman awal..."
sleep 2
cd /tmp && sh inpass
exit
fi
}
echo -e "$Y"
cr(){
read -p "Install Core untuk device Ramips, Anda Yakin? (y/n) : " an
if [[ $an == "y" || $an == "Y" ]]; then
echo -e "Mulai installasi core oc (ramips)"
sleep 2
clear
echo -e "Proses Installasi core oc (ramips)"
wget --no-check-certificate "https://raw.githubusercontent.com/alkhanet26/core-oc-ramips/main/clash" -O /etc/openclash/core/clash && chmod +x /etc/openclash/core/clash
wget --no-check-certificate "https://raw.githubusercontent.com/alkhanet26/core-oc-ramips/main/clash_tun" -O /etc/openclash/core/clash_tun && chmod +x /etc/openclash/core/clash_tun
wget --no-check-certificate "https://raw.githubusercontent.com/alkhanet26/core-oc-ramips/main/clash_meta" -O /etc/openclash/core/clash_meta && chmod +x /etc/openclash/core/clash_meta
sleep 2
echo -e "Proses Selesai"
cd /tmp && sh inpass
else
clear
echo -e "kembali ke halaman awal..."
sleep 2
cd /tmp && sh inpass
exit
fi
}
echo -e "$Y"
Terminal(){
read -p "Install Terminal, Anda Yakin? (y/n) : " an
if [[ $an == "y" || $an == "Y" ]]; then
echo -e "Mulai installasi Terminal"
sleep 2
clear
echo -e "Proses Installasi Terminal"
opkg remove dnsmasq && opkg update && opkg install luci-app-ttyd
sleep 2
echo -e "Proses Selesai"
cd /tmp && sh inpass
else
clear
echo -e "kembali ke halaman awal..."
sleep 2
cd /tmp && sh inpass
exit
fi
}
echo -e "$Y"
Sync_jam(){
read -p "Install Auto Sync Jam, Anda Yakin? (y/n) : " an
if [[ $an == "y" || $an == "Y" ]]; then
echo -e "Mulai installasi Auto Sync Jam"
sleep 2
clear
echo -e "Proses Installasi Auto Sync Jam"
wget --no-check-certificate "https://raw.githubusercontent.com/alkhanet26/sync-jam-dengan-bug/main/jam.sh" -O /sbin/jam.sh && chmod +x /sbin/jam.sh
sleep 2
echo -e "Proses Selesai"
cd /tmp && sh inpass
else
clear
echo -e "kembali ke halaman awal..."
sleep 2
clear
cd /tmp && sh inpass
fi
}
ramips_wss(){
read -p "Install xray-wss mipsel_24kc (ex:PL100), Anda Yakin? (y/n) : " an
if [[ $an == "y" || $an == "Y" ]]; then
echo -e "Mulai installasi xray-wss"
sleep 2
clear
echo -e "Proses Installasi xray-wss"
rm /usr/bin/xray
wget --no-check-certificate "https://raw.githubusercontent.com/alkhanet26/xray-wss-ramips/main/xray" -O /usr/bin/xray && chmod +x /usr/bin/xray
sleep 2
echo -e "Proses Selesai"
cd /tmp && sh inpass
else
clear
echo -e "kembali ke halaman awal..."
sleep 2
clear
cd /tmp && sh inpass
fi
}

banner(){
clear
echo -e "$DB ******************************************************"
echo -e "$DB ******************************************************"
echo -e " **                                                  **"
echo -e "$DB **$R       SELAMAT DATANG INSTALLER TOOLS       $DB**"
echo -e " **                                                  **"
echo -e "$DB ******************************************************"
echo -e "$DB **$Y     PILIH ARCH SESUAI DEVICE YANG DIPAKAI!!!     $DB**"
echo -e "$DB ******************************************************"
echo -e "$DB **$G        DAFTAR :                    *  PERINTAH : $DB**"
echo -e "$DB **$G SCRIPT REPO                        * sh inpass 1 $DB**"
echo -e "$DB **$G INSTALL PASSWALL 16MB MIPSEL_24KC  * sh inpass 2 $DB**"
echo -e "$DB **$G INSTALL XRAY WSS MIPSEL_24KC       * sh inpass ws$DB**"
echo -e "$DB **$G INSTALL PASSWALL ALL ARCH          * sh inpass 3 $DB**"
echo -e "$DB **$G INSTALL OPENCLASH ALL ARCH         * sh inpass 4 $DB**"
echo -e "$DB **$G INSTALL CORE MIPSEL_24KC           * sh inpass cr$DB**"
echo -e "$DB **$G INSTALL TERMINAL                   * sh inpass 5 $DB**"
echo -e "$DB **$G INSTALL AUTO SYNC JAM              * sh inpass 6 $DB**"
echo -e "$DB ******************************************************"
echo -e "$DB **$Y           INSTALLER TOOSL BY ALKHANET            $DB**"
echo -e "$DB **$B                 VERSI ALPHA 1.0                  $DB**"
echo -e "$DB ******************************************************"
echo -e "$DB ******************************************************"
echo -e "$Y"
}

case $1 in
"1")
repo_cust;exit
;;
esac

case $1 in
"2")
PLite_Mipsel_24kc_16MB;exit
;;
esac

case $1 in
"3")
PLite_All;exit
;;
esac

case $1 in
"4")
OC;exit
;;
esac

case $1 in
"5")
Terminal;exit
;;
esac

case $1 in
"6")
Sync_jam;exit
;;
esac

case $1 in
"ws")
ramips_wss;exit
;;
esac

case $1 in
"cr")
core;exit
;;
esac

clear
echo -e "$DB ******************************************************"
echo -e "$DB ******************************************************"
echo -e " **                                                  **"
echo -e "$DB **$R       SELAMAT DATANG INSTALLER TOOLS       $DB**"
echo -e " **                                                  **"
echo -e "$DB ******************************************************"
echo -e "$DB **$Y     PILIH ARCH SESUAI DEVICE YANG DIPAKAI!!!     $DB**"
echo -e "$DB ******************************************************"
echo -e "$DB **$G        DAFTAR :                    *  PERINTAH : $DB**"
echo -e "$DB **$G SCRIPT REPO                        * sh inpass 1 $DB**"
echo -e "$DB **$G INSTALL PASSWALL 16MB MIPSEL_24KC  * sh inpass 2 $DB**"
echo -e "$DB **$G INSTALL XRAY WSS MIPSEL_24KC       * sh inpass ws$DB**"
echo -e "$DB **$G INSTALL PASSWALL ALL ARCH          * sh inpass 3 $DB**"
echo -e "$DB **$G INSTALL OPENCLASH ALL ARCH         * sh inpass 4 $DB**"
echo -e "$DB **$G INSTALL CORE MIPSEL_24KC           * sh inpass cr$DB**"
echo -e "$DB **$G INSTALL TERMINAL                   * sh inpass 5 $DB**"
echo -e "$DB **$G INSTALL AUTO SYNC JAM              * sh inpass 6 $DB**"
echo -e "$DB ******************************************************"
echo -e "$DB **$Y           INSTALLER TOOSL BY ALKHANET            $DB**"
echo -e "$DB **$B                 VERSI ALPHA 1.0                  $DB**"
echo -e "$DB ******************************************************"
echo -e "$DB ******************************************************"
echo -e "$Y"
exit
